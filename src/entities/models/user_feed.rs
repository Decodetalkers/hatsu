//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_feed")]
pub struct Model {
    pub user_id: String,
    pub hatsu: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub feed_url: String,
    pub next_url: Option<String>,
    pub title: String,
    pub description: Option<String>,
    pub icon: Option<String>,
    pub language: Option<String>,
    pub items: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id"
    )]
    User,
}

impl ActiveModelBehavior for ActiveModel {}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}
